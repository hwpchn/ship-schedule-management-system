# Generated by Django 4.2.7 on 2025-05-23 13:27

from django.db import migrations


def create_initial_permissions(apps, schema_editor):
    """
    创建初始权限数据
    """
    Permission = apps.get_model('authentication', 'Permission')
    
    # 定义初始权限数据
    permissions_data = [
        # 用户管理权限
        {
            'code': 'user.list',
            'name': '查看用户列表',
            'description': '允许查看系统中所有用户的列表',
            'category': 'user_management'
        },
        {
            'code': 'user.detail',
            'name': '查看用户详情',
            'description': '允许查看单个用户的详细信息',
            'category': 'user_management'
        },
        {
            'code': 'user.create',
            'name': '创建用户',
            'description': '允许创建新用户账户',
            'category': 'user_management'
        },
        {
            'code': 'user.update',
            'name': '修改用户',
            'description': '允许修改用户信息',
            'category': 'user_management'
        },
        {
            'code': 'user.delete',
            'name': '删除用户',
            'description': '允许删除用户账户',
            'category': 'user_management'
        },
        
        # 角色管理权限
        {
            'code': 'role.list',
            'name': '查看角色列表',
            'description': '允许查看系统中所有角色的列表',
            'category': 'role_management'
        },
        {
            'code': 'role.detail',
            'name': '查看角色详情',
            'description': '允许查看单个角色的详细信息',
            'category': 'role_management'
        },
        {
            'code': 'role.create',
            'name': '创建角色',
            'description': '允许创建新角色',
            'category': 'role_management'
        },
        {
            'code': 'role.update',
            'name': '修改角色',
            'description': '允许修改角色信息和权限',
            'category': 'role_management'
        },
        {
            'code': 'role.delete',
            'name': '删除角色',
            'description': '允许删除角色',
            'category': 'role_management'
        },
        
        # 权限管理
        {
            'code': 'permission.list',
            'name': '查看权限列表',
            'description': '允许查看系统中所有权限的列表',
            'category': 'permission_management'
        },
        {
            'code': 'permission.detail',
            'name': '查看权限详情',
            'description': '允许查看单个权限的详细信息',
            'category': 'permission_management'
        },
        
        # 用户角色分配
        {
            'code': 'user.role.view',
            'name': '查看用户角色',
            'description': '允许查看用户拥有的角色',
            'category': 'user_role_management'
        },
        {
            'code': 'user.role.assign',
            'name': '分配用户角色',
            'description': '允许给用户分配或修改角色',
            'category': 'user_role_management'
        },
        {
            'code': 'user.role.remove',
            'name': '移除用户角色',
            'description': '允许移除用户的角色',
            'category': 'user_role_management'
        },
        
        # 船期管理权限（示例，供未来扩展）
        {
            'code': 'schedule.list',
            'name': '查看船期列表',
            'description': '允许查看船期调度列表',
            'category': 'schedule_management'
        },
        {
            'code': 'schedule.detail',
            'name': '查看船期详情',
            'description': '允许查看船期详细信息',
            'category': 'schedule_management'
        },
        {
            'code': 'schedule.create',
            'name': '创建船期',
            'description': '允许创建新的船期调度',
            'category': 'schedule_management'
        },
        {
            'code': 'schedule.update',
            'name': '修改船期',
            'description': '允许修改船期调度信息',
            'category': 'schedule_management'
        },
        {
            'code': 'schedule.delete',
            'name': '删除船期',
            'description': '允许删除船期调度',
            'category': 'schedule_management'
        },
        
        # 系统管理权限
        {
            'code': 'system.admin',
            'name': '系统管理',
            'description': '系统管理员权限，拥有所有权限',
            'category': 'system_management'
        },
    ]
    
    # 批量创建权限
    for perm_data in permissions_data:
        Permission.objects.get_or_create(
            code=perm_data['code'],
            defaults=perm_data
        )


def create_initial_roles(apps, schema_editor):
    """
    创建初始角色数据
    """
    Permission = apps.get_model('authentication', 'Permission')
    Role = apps.get_model('authentication', 'Role')
    
    # 创建超级管理员角色
    admin_role, created = Role.objects.get_or_create(
        name='超级管理员',
        defaults={
            'description': '拥有系统所有权限的管理员角色',
            'is_active': True
        }
    )
    
    if created:
        # 给超级管理员分配所有权限
        all_permissions = Permission.objects.all()
        admin_role.permissions.set(all_permissions)
    
    # 创建普通管理员角色
    manager_role, created = Role.objects.get_or_create(
        name='普通管理员',
        defaults={
            'description': '普通管理员，拥有用户和角色管理权限',
            'is_active': True
        }
    )
    
    if created:
        # 给普通管理员分配基本管理权限
        manager_permissions = Permission.objects.filter(
            code__in=[
                'user.list', 'user.detail', 'user.create', 'user.update',
                'role.list', 'role.detail',
                'permission.list', 'permission.detail',
                'user.role.view', 'user.role.assign'
            ]
        )
        manager_role.permissions.set(manager_permissions)
    
    # 创建普通用户角色
    user_role, created = Role.objects.get_or_create(
        name='普通用户',
        defaults={
            'description': '普通用户角色，只能查看基本信息',
            'is_active': True
        }
    )
    
    if created:
        # 给普通用户分配基本查看权限
        user_permissions = Permission.objects.filter(
            code__in=['schedule.list', 'schedule.detail']
        )
        user_role.permissions.set(user_permissions)


def reverse_initial_data(apps, schema_editor):
    """
    回滚初始数据
    """
    Permission = apps.get_model('authentication', 'Permission')
    Role = apps.get_model('authentication', 'Role')
    
    # 删除初始创建的角色
    Role.objects.filter(name__in=['超级管理员', '普通管理员', '普通用户']).delete()
    
    # 删除初始创建的权限
    Permission.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0002_permission_role_user_roles'),
    ]

    operations = [
        migrations.RunPython(
            create_initial_permissions,
            reverse_initial_data
        ),
        migrations.RunPython(
            create_initial_roles,
            migrations.RunPython.noop
        ),
    ]
